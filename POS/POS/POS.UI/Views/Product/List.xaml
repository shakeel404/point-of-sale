<UserControl x:Class="POS.UI.Views.Product.List"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:reuse="clr-namespace:POS.UI.Views.Reusable"
             xmlns:Icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
              >
     
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> 
            <RowDefinition Height="*"/> 
        </Grid.RowDefinitions>
       
        <StackPanel Orientation="Horizontal"   Grid.Row="0" Margin="0 0 20 0" HorizontalAlignment="Right" VerticalAlignment="Center">

            <Button IsEnabled="{Binding Path=SelectedItems.Count,ElementName=ItemsGrid}" 
                    Command="{Binding ElementName=ItemsGrid, Path=SelectedItem.DeleteCommand}" 
                    Dialog:DialogParticipation.Register="{Binding Path=SelectedItem,ElementName=ItemsGrid}"
                    Grid.Row="1" Width="100" Margin="10 0 0 0"   HorizontalAlignment="Left" VerticalAlignment="Center"   Style="{StaticResource AccentedSquareButtonStyle}" >
                Delete
            </Button>
            <reuse:Paginator DataContext="{Binding}" />

        </StackPanel>

        <DataGrid   x:Name="ItemsGrid"   Grid.Row="1" ItemsSource="{Binding Items}" AutoGenerateColumns="False"  CanUserAddRows="False"
                  Style="{StaticResource AzureDataGrid}"> 

            <DataGrid.Columns>
                <DataGridTextColumn     Header="UPC" Binding="{Binding UPC}" FontWeight="SemiBold"  Width="200" IsReadOnly="True"/>
                <DataGridTextColumn Header="Name"  Binding="{Binding Name,UpdateSourceTrigger=PropertyChanged,Delay=2000}" FontWeight="SemiBold"  Width="200">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="MaxLength" Value="50"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                    
                </DataGridTextColumn>
                <Controls:DataGridNumericUpDownColumn Header="Quanity" Binding="{Binding Quantity,UpdateSourceTrigger=PropertyChanged,Delay=1500}" Minimum="0" />
                <Controls:DataGridNumericUpDownColumn Header="Purchase Price" Binding="{Binding PurchasePrice,UpdateSourceTrigger=PropertyChanged,Delay=1500}" Minimum="0" />
                <Controls:DataGridNumericUpDownColumn Header="Sale Price" Binding="{Binding SalePrice,UpdateSourceTrigger=PropertyChanged,Delay=1500}" Minimum="0" />
                <DataGridTextColumn  Header="Unit Profit" Binding="{Binding UnitProfit}" FontWeight="Bold" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock"> 
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Total Profit" Binding="{Binding TotalProfit}" FontWeight="Bold" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn  Header="Id" Binding="{Binding Id}"  Visibility="Collapsed"/>
                

            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger SourceObject="{Binding ElementName=ItemsGrid}" EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectedItem.ViewModelAttachedCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        
    </Grid>
</UserControl>
